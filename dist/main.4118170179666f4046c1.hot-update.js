webpackHotUpdate("main",{

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PIXI = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/pixi.es.js");
var Keyboard = /** @class */ (function () {
    function Keyboard() {
        var _this = this;
        this.keys = {};
        window.addEventListener('keydown', function (event) {
            _this.keys[event.code] = true;
        });
        window.addEventListener('keyup', function (event) {
            _this.keys[event.code] = false;
        });
    }
    Keyboard.prototype.isPressed = function (eventCode) {
        return this.keys[eventCode];
    };
    return Keyboard;
}());
var Game = /** @class */ (function () {
    function Game() {
        this.keyboard = new Keyboard();
        app = new PIXI.Application({
            width: 1280,
            height: 720,
            backgroundColor: 0x42a7f5
        });
        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;
        PIXI.Loader.shared.add('assets/img/textures.json').load(setup);
    }
    Game.prototype.setup = function () {
        document.body.appendChild(app.view);
        // Textures
        var sheet = PIXI.Loader.shared.resources['assets/img/textures.json'].spritesheet;
        playerTextures = [
            sheet.textures['player/player_00.png'],
            sheet.textures['player/player_01.png'],
            sheet.textures['player/player_02.png']
        ];
        player = new PIXI.Sprite(playerTextures[0]);
        app.stage.addChild(player);
        player.position.x = app.renderer.width / 2;
        player.position.y = app.renderer.height / 2;
        player.scale = new PIXI.Point(8, 8);
        console.log(app.renderer.width / 2);
        console.log(app.renderer.height / 2);
        // Assign update function
        app.ticker.add(update);
    };
    return Game;
}());
function update(delta) {
    if (keyboard.isPressed('Space')) {
        player.texture = playerTextures[0];
    }
    else {
        player.texture = playerTextures[2];
    }
}


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsdUZBQWdDO0FBR2hDO0lBR0k7UUFBQSxpQkFRQztRQVZELFNBQUksR0FBNkIsRUFBRSxDQUFDO1FBR2hDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsVUFBQyxLQUFvQjtZQUNwRCxLQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQUMsS0FBb0I7WUFDbEQsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELDRCQUFTLEdBQVQsVUFBVSxTQUFpQjtRQUN2QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNMLGVBQUM7QUFBRCxDQUFDO0FBQ0Q7SUFRSTtRQUxNLGFBQVEsR0FBYSxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBTXRDLEdBQUcsR0FBRyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDdkIsS0FBSyxFQUFFLElBQUk7WUFDWCxNQUFNLEVBQUUsR0FBRztZQUNYLGVBQWUsRUFBRSxRQUFRO1NBQzVCLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBRUQsb0JBQUssR0FBTDtRQUNJLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVwQyxXQUFXO1FBQ1gsSUFBTSxLQUFLLEdBQXFCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLFdBQVcsQ0FBQztRQUVyRyxjQUFjLEdBQUc7WUFDYixLQUFLLENBQUMsUUFBUSxDQUFDLHNCQUFzQixDQUFDO1lBQ3RDLEtBQUssQ0FBQyxRQUFRLENBQUMsc0JBQXNCLENBQUM7WUFDdEMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQztTQUN6QyxDQUFDO1FBRUYsTUFBTSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QyxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMzQixNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQzVDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVwQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFckMseUJBQXlCO1FBQ3pCLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxXQUFDO0FBQUQsQ0FBQyxJQUZBO0FBRUQsU0FBUyxNQUFNLENBQUMsS0FBYTtJQUN6QixJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDN0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdEM7U0FBTTtRQUNILE1BQU0sQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3RDO0FBQ0wsQ0FBQyIsImZpbGUiOiJtYWluLjQxMTgxNzAxNzk2NjZmNDA0NmMxLmhvdC11cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBQSVhJIGZyb20gJ3BpeGkuanMnO1xuaW1wb3J0IHsgZGVidWcgfSBmcm9tICd3ZWJwYWNrJztcblxuY2xhc3MgS2V5Ym9hcmQge1xuICAgIGtleXM6IHsgW2lkOiBzdHJpbmddOiBib29sZWFufSA9IHt9O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmtleXNbZXZlbnQuY29kZV0gPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZXZlbnQ6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMua2V5c1tldmVudC5jb2RlXSA9IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpc1ByZXNzZWQoZXZlbnRDb2RlOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5c1tldmVudENvZGVdO1xuICAgIH1cbn1cbmNsYXNzIEdhbWUge1xuICAgIGFwcDogUElYSS5BcHBsaWNhdGlvbjtcblxuICAgIGNvbnN0IGtleWJvYXJkOiBLZXlib2FyZCA9IG5ldyBLZXlib2FyZCgpO1xuXG4gICAgcGxheWVyOiBQSVhJLlNwcml0ZTtcbiAgICBwbGF5ZXJUZXh0dXJlczogUElYSS5UZXh0dXJlW107XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgYXBwID0gbmV3IFBJWEkuQXBwbGljYXRpb24oe1xuICAgICAgICAgICAgd2lkdGg6IDEyODAsXG4gICAgICAgICAgICBoZWlnaHQ6IDcyMCxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogMHg0MmE3ZjVcbiAgICAgICAgfSk7XG4gICAgICAgIFBJWEkuc2V0dGluZ3MuU0NBTEVfTU9ERSA9IFBJWEkuU0NBTEVfTU9ERVMuTkVBUkVTVDtcbiAgICAgICAgUElYSS5Mb2FkZXIuc2hhcmVkLmFkZCgnYXNzZXRzL2ltZy90ZXh0dXJlcy5qc29uJykubG9hZChzZXR1cCk7XG4gICAgfVxuXG4gICAgc2V0dXAoKTogdm9pZCB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYXBwLnZpZXcpO1xuXG4gICAgICAgIC8vIFRleHR1cmVzXG4gICAgICAgIGNvbnN0IHNoZWV0OiBQSVhJLlNwcml0ZXNoZWV0ID0gUElYSS5Mb2FkZXIuc2hhcmVkLnJlc291cmNlc1snYXNzZXRzL2ltZy90ZXh0dXJlcy5qc29uJ10uc3ByaXRlc2hlZXQ7XG5cbiAgICAgICAgcGxheWVyVGV4dHVyZXMgPSBbXG4gICAgICAgICAgICBzaGVldC50ZXh0dXJlc1sncGxheWVyL3BsYXllcl8wMC5wbmcnXSxcbiAgICAgICAgICAgIHNoZWV0LnRleHR1cmVzWydwbGF5ZXIvcGxheWVyXzAxLnBuZyddLFxuICAgICAgICAgICAgc2hlZXQudGV4dHVyZXNbJ3BsYXllci9wbGF5ZXJfMDIucG5nJ11cbiAgICAgICAgXTtcbiAgICAgICAgXG4gICAgICAgIHBsYXllciA9IG5ldyBQSVhJLlNwcml0ZShwbGF5ZXJUZXh0dXJlc1swXSk7XG4gICAgICAgIGFwcC5zdGFnZS5hZGRDaGlsZChwbGF5ZXIpO1xuICAgICAgICBwbGF5ZXIucG9zaXRpb24ueCA9IGFwcC5yZW5kZXJlci53aWR0aCAvIDI7XG4gICAgICAgIHBsYXllci5wb3NpdGlvbi55ID0gYXBwLnJlbmRlcmVyLmhlaWdodCAvIDI7XG4gICAgICAgIHBsYXllci5zY2FsZSA9IG5ldyBQSVhJLlBvaW50KDgsIDgpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKGFwcC5yZW5kZXJlci53aWR0aCAvIDIpO1xuICAgICAgICBjb25zb2xlLmxvZyhhcHAucmVuZGVyZXIuaGVpZ2h0IC8gMik7XG4gICAgICAgIFxuICAgICAgICAvLyBBc3NpZ24gdXBkYXRlIGZ1bmN0aW9uXG4gICAgICAgIGFwcC50aWNrZXIuYWRkKHVwZGF0ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlKGRlbHRhOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgaWYgKGtleWJvYXJkLmlzUHJlc3NlZCgnU3BhY2UnKSkge1xuICAgICAgICAgICAgcGxheWVyLnRleHR1cmUgPSBwbGF5ZXJUZXh0dXJlc1swXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBsYXllci50ZXh0dXJlID0gcGxheWVyVGV4dHVyZXNbMl07XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9