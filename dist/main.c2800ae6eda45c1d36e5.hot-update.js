webpackHotUpdate("main",{

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PIXI = __webpack_require__(/*! pixi.js */ "./node_modules/pixi.js/lib/pixi.es.js");
var Player_class_1 = __webpack_require__(/*! ./app/Player.class */ "./src/app/Player.class.ts");
var Keyboard = /** @class */ (function () {
    function Keyboard() {
        var _this = this;
        this.keys = {};
        window.addEventListener('keydown', function (event) {
            _this.keys[event.code] = true;
        });
        window.addEventListener('keyup', function (event) {
            _this.keys[event.code] = false;
        });
    }
    Keyboard.prototype.isPressed = function (eventCode) {
        return this.keys[eventCode];
    };
    return Keyboard;
}());
var app = new PIXI.Application({
    width: 1280,
    height: 720,
    backgroundColor: 0x42a7f5
});
var Game = /** @class */ (function () {
    function Game() {
        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;
    }
    Game.prototype.setup = function () {
        document.body.appendChild(app.view);
        this.player = new Player_class_1.default();
        app.stage.addChild(this.player.sprite);
        app.ticker.add(this.update);
    };
    Game.prototype.update = function (delta) {
        this.player.update();
    };
    return Game;
}());
new Game();


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsdUZBQWdDO0FBQ2hDLGdHQUF3QztBQUd4QztJQUdJO1FBQUEsaUJBUUM7UUFWRCxTQUFJLEdBQTZCLEVBQUUsQ0FBQztRQUdoQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFVBQUMsS0FBb0I7WUFDcEQsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDLEtBQW9CO1lBQ2xELEtBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCw0QkFBUyxHQUFULFVBQVUsU0FBaUI7UUFDdkIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDTCxlQUFDO0FBQUQsQ0FBQztBQUVELElBQU0sR0FBRyxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM3QixLQUFLLEVBQUUsSUFBSTtJQUNYLE1BQU0sRUFBRSxHQUFHO0lBQ1gsZUFBZSxFQUFFLFFBQVE7Q0FDNUIsQ0FBQyxDQUFDO0FBRUg7SUFTSTtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDO0lBQ3hELENBQUM7SUFFRCxvQkFBSyxHQUFMO1FBQ0ksUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXBDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxzQkFBTSxFQUFFLENBQUM7UUFFM0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV2QyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELHFCQUFNLEdBQU4sVUFBTyxLQUFhO1FBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQW1ETCxXQUFDO0FBQUQsQ0FBQztBQUVELElBQUksSUFBSSxFQUFFLENBQUMiLCJmaWxlIjoibWFpbi5jMjgwMGFlNmVkYTQ1YzFkMzZlNS5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUElYSSBmcm9tICdwaXhpLmpzJztcbmltcG9ydCBQbGF5ZXIgZnJvbSAnLi9hcHAvUGxheWVyLmNsYXNzJztcbmltcG9ydCB7IGRlYnVnIH0gZnJvbSAnd2VicGFjayc7XG5cbmNsYXNzIEtleWJvYXJkIHtcbiAgICBrZXlzOiB7IFtpZDogc3RyaW5nXTogYm9vbGVhbn0gPSB7fTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5rZXlzW2V2ZW50LmNvZGVdID0gdHJ1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmtleXNbZXZlbnQuY29kZV0gPSBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgaXNQcmVzc2VkKGV2ZW50Q29kZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleXNbZXZlbnRDb2RlXTtcbiAgICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBQSVhJLkFwcGxpY2F0aW9uKHtcbiAgICB3aWR0aDogMTI4MCxcbiAgICBoZWlnaHQ6IDcyMCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IDB4NDJhN2Y1XG59KTtcblxuY2xhc3MgR2FtZSB7XG4gICAgLypyZWFkb25seSBhcHA6IFBJWEkuQXBwbGljYXRpb24gPSBuZXcgUElYSS5BcHBsaWNhdGlvbih7XG4gICAgICAgIHdpZHRoOiAxMjgwLFxuICAgICAgICBoZWlnaHQ6IDcyMCxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAweDQyYTdmNVxuICAgIH0pOyovXG4gICAgXG4gICAgcGxheWVyOiBQbGF5ZXI7XG4gICAgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIFBJWEkuc2V0dGluZ3MuU0NBTEVfTU9ERSA9IFBJWEkuU0NBTEVfTU9ERVMuTkVBUkVTVDtcbiAgICB9XG5cbiAgICBzZXR1cCgpOiB2b2lkIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhcHAudmlldyk7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKCk7XG5cbiAgICAgICAgYXBwLnN0YWdlLmFkZENoaWxkKHRoaXMucGxheWVyLnNwcml0ZSk7XG5cbiAgICAgICAgYXBwLnRpY2tlci5hZGQodGhpcy51cGRhdGUpO1xuICAgIH1cblxuICAgIHVwZGF0ZShkZWx0YTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMucGxheWVyLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIC8qYXBwOiBQSVhJLkFwcGxpY2F0aW9uO1xuXG4gICAgY29uc3Qga2V5Ym9hcmQ6IEtleWJvYXJkID0gbmV3IEtleWJvYXJkKCk7XG5cbiAgICBwbGF5ZXI6IFBJWEkuU3ByaXRlO1xuICAgIHBsYXllclRleHR1cmVzOiBQSVhJLlRleHR1cmVbXTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmFwcCA9IG5ldyBQSVhJLkFwcGxpY2F0aW9uKHtcbiAgICAgICAgICAgIHdpZHRoOiAxMjgwLFxuICAgICAgICAgICAgaGVpZ2h0OiA3MjAsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IDB4NDJhN2Y1XG4gICAgICAgIH0pO1xuICAgICAgICBQSVhJLnNldHRpbmdzLlNDQUxFX01PREUgPSBQSVhJLlNDQUxFX01PREVTLk5FQVJFU1Q7XG4gICAgICAgIFBJWEkuTG9hZGVyLnNoYXJlZC5hZGQoJ2Fzc2V0cy9pbWcvdGV4dHVyZXMuanNvbicpLmxvYWQodGhpcy5zZXR1cCk7XG4gICAgfVxuXG4gICAgc2V0dXAoKTogdm9pZCB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5hcHAudmlldyk7XG5cbiAgICAgICAgLy8gVGV4dHVyZXNcbiAgICAgICAgY29uc3Qgc2hlZXQ6IFBJWEkuU3ByaXRlc2hlZXQgPSBQSVhJLkxvYWRlci5zaGFyZWQucmVzb3VyY2VzWydhc3NldHMvaW1nL3RleHR1cmVzLmpzb24nXS5zcHJpdGVzaGVldDtcblxuICAgICAgICBwbGF5ZXJUZXh0dXJlcyA9IFtcbiAgICAgICAgICAgIHNoZWV0LnRleHR1cmVzWydwbGF5ZXIvcGxheWVyXzAwLnBuZyddLFxuICAgICAgICAgICAgc2hlZXQudGV4dHVyZXNbJ3BsYXllci9wbGF5ZXJfMDEucG5nJ10sXG4gICAgICAgICAgICBzaGVldC50ZXh0dXJlc1sncGxheWVyL3BsYXllcl8wMi5wbmcnXVxuICAgICAgICBdO1xuICAgICAgICBcbiAgICAgICAgcGxheWVyID0gbmV3IFBJWEkuU3ByaXRlKHBsYXllclRleHR1cmVzWzBdKTtcbiAgICAgICAgYXBwLnN0YWdlLmFkZENoaWxkKHBsYXllcik7XG4gICAgICAgIHBsYXllci5wb3NpdGlvbi54ID0gYXBwLnJlbmRlcmVyLndpZHRoIC8gMjtcbiAgICAgICAgcGxheWVyLnBvc2l0aW9uLnkgPSBhcHAucmVuZGVyZXIuaGVpZ2h0IC8gMjtcbiAgICAgICAgcGxheWVyLnNjYWxlID0gbmV3IFBJWEkuUG9pbnQoOCwgOCk7XG5cbiAgICAgICAgY29uc29sZS5sb2coYXBwLnJlbmRlcmVyLndpZHRoIC8gMik7XG4gICAgICAgIGNvbnNvbGUubG9nKGFwcC5yZW5kZXJlci5oZWlnaHQgLyAyKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFzc2lnbiB1cGRhdGUgZnVuY3Rpb25cbiAgICAgICAgYXBwLnRpY2tlci5hZGQodXBkYXRlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1cGRhdGUoZGVsdGE6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAoa2V5Ym9hcmQuaXNQcmVzc2VkKCdTcGFjZScpKSB7XG4gICAgICAgICAgICBwbGF5ZXIudGV4dHVyZSA9IHBsYXllclRleHR1cmVzWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGxheWVyLnRleHR1cmUgPSBwbGF5ZXJUZXh0dXJlc1syXTtcbiAgICAgICAgfVxuICAgIH0qL1xufVxuXG5uZXcgR2FtZSgpOyJdLCJzb3VyY2VSb290IjoiIn0=